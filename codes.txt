yonetim.jsp

<%-- 
    Document   : yonetim
    Created on : Dec 4, 2021, 10:11:54 PM
    Author     : Lenovo
--%>

<%@page import="folder.veritabankatman"%>
<!DOCTYPE html>
<%@page contentType="text/html" pageEncoding="ISO-8859-9"%>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
       <%
  request.setCharacterEncoding("UTF-8");
 
%>
        <jsp:useBean id="firstbean" scope="session" class="folder.yonetici" />
        <jsp:setProperty name="firstbean" property="isim"  />
        <jsp:setProperty name="firstbean" property="sifre"  />
     
        <jsp:getProperty name="firstbean" property="isim" />
        <jsp:getProperty name="firstbean" property="sifre" />
        
        <% 
            if(firstbean.sayackontrol()){
           if(firstbean.sifrekontrol() ){
               veritabankatman a=new veritabankatman();
               a.time1sql(firstbean.getIsim());
            out.println("sisteme hosgeldiniz");
       String redirectURL = "http://localhost:25693/WebApplication4/test.jsp";
    response.sendRedirect(redirectURL);
   }
           else{
 
        String redirectURL = "http://localhost:25693/WebApplication4/giris.html";
    response.sendRedirect(redirectURL);

           }
        }else{
             String redirectURL = "http://localhost:25693/WebApplication4/3kez.jsp";
   response.sendRedirect(redirectURL);
        }
       %>
      
    </body>
</html>

test.jsp

<%-- 
    Document   : test
    Created on : Mar 14, 2022, 5:22:53 PM
    Author     : Lenovo
--%>

<%@page import="folder.dnm"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
        
    </head>
    
    <body>
        <jsp:useBean id="bean2" scope="session" class="folder.yonetici" />
        <jsp:setProperty name="bean2" property="veri5"  />
        
       <%

double [][] temp1;
temp1=bean2.getVeri5();
//dnm obj = new dnm();
//temp1= obj.veri2();
String temp2="merhaba";
out.println(temp1[2][2]);
String redirectURL = "http://localhost:25693/WebApplication4/arayuz.jsp";
    response.sendRedirect(redirectURL);
%>

        <%=temp1%>
        <input type="hidden" name="temp1" value='<%=temp1%>' >
        <c:out value="${temp1}" />
    </body>
</html>


newcss.css

*{
    box-sizing: border-box;
}

*:focus{
    outline: none;
}

body{
    font-family: sans-serif;
    padding: 50px;
    background-image: url("http://sbt.com.tr/wp-content/uploads/Savin-NY-Website-Background-Web-1.jpg") ;

 background-position: center;
}

.form{
    margin: 20px auto;
    width: 300px;
    padding: 50px;
    background-color: #fff;
}

.input-conteiner{
    padding: 5px;
    margin: 10px auto;
}

input{
    width: 200px;
    height: 30px;
}

input:focus{
    border: midnightblue;
}

h1{
    text-align: center;
    color: black;
    
  
    
}
h2{
    text-align: center;
    color: black;
    position: fixed;
  left: 900px;
  top: 100px;
}
h3{
    text-align: center ;
     position: absolute;
  left: 500px;
  top: 350px;
   
}
h4{
    text-align: center;
    color: black;
    position: absolute;
  left: 200px;
  top: 100px;
  
}
.btn{
    margin: 5px;
    width: 200px;
    height: 30px;
    margin-left: 5px;
    background-color: #FFFE00;
    border: 1px solid grey;
}
/*
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
*/
/* 
    Created on : Mar 11, 2022, 4:27:09 PM
    Author     : Lenovo
*/


koordinatlar.jsp

<%-- 
    Document   : harita
    Created on : Mar 11, 2022, 5:36:52 PM
    Author     : Lenovo
--%>

<%@page import="folder.Lokasyon"%>
<%@page import="java.text.SimpleDateFormat"%>
<%@page import="java.text.DateFormat"%>
<%@page import="java.util.Calendar"%>
<%@page import="folder.dnm"%>
<%@page import="folder.veritabankatman"%>
<%@page import="java.util.Date"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
        
    </head>
    
    <body>
      
       
       <%
           Lokasyon a=new Lokasyon();
           
String saatbas=request.getParameter("saat1");
String saatson=request.getParameter("saat2");
String araba=request.getParameter("aracno");
String araba2=request.getParameter("aracno2");

 String lokasyon2[][];
 String lokasyon3[][];
Date date = Calendar.getInstance().getTime();  
    DateFormat dateFormat = new SimpleDateFormat("hh:mm");  
    String strDate = dateFormat.format(date);

    if(saatbas=="" && saatson==""){
   lokasyon2=a.sendLocation(araba, strDate);
   lokasyon3=a.sendLocation(araba2, strDate);
 
    }
    else{
    lokasyon2=a.sendLocation(araba, saatbas, saatson);
    lokasyon3=a.sendLocation(araba2, saatbas, saatson);
  
    }
    for(int i=0;i<lokasyon2.length;i++){
     for(int j=0;j<2;j++){
         if(lokasyon2[i][j]==null){
         break;
         }
    out.println("koordinat="+lokasyon2[i][j]);
    out.println("koordinat2="+lokasyon3[i][j]);
    }
    }
    
%>

        
    </body>
</html>

index.html

<!DOCTYPE html>
<html> 
<head> 
    
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" /> 
  <title>Google Maps Multiple Markers</title> 
  
  <script src="http://maps.google.com/maps/api/js?key=YOUR_API_KEY" 
          type="text/javascript"></script>
          
          
</head> 
<body>
    
  <div id="map" style="width: 500px; height: 400px;"></div>
  
  <script type="text/javascript">
   
  fetch('123.txt')
  .then(response => response.text())
  .then(data => {
     console.log (data);
      const data2=data.split("!");
      console.log(data2);
for (var i = 0; i < data2.length; i++) {
   data2[i] = data2[i].split(",");
}
  	var locations= data2;

    
console.log(locations);


    var map = new google.maps.Map(document.getElementById('map'), {
      zoom: 10,
      center: new google.maps.LatLng(59.34700161, 18.09807431),
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });
 
    var infowindow = new google.maps.InfoWindow();

    var marker, i;
    
    for (i = 0; i < locations.length; i++) {  
      marker = new google.maps.Marker({
        position: new google.maps.LatLng(locations[i][1], locations[i][2]),
        map: map
      });
      
      google.maps.event.addListener(marker, 'click', (function(marker, i) {
        return function() {
          infowindow.setContent(locations[i][0]);
          infowindow.open(map, marker);
        }
      })(marker, i));
    }
  
  });
    
  </script>
</body>
</html>

harita.jsp

<%-- 
    Document   : harita
    Created on : Mar 11, 2022, 5:36:52 PM
    Author     : Lenovo
--%>

<%@page import="folder.Lokasyon"%>
<%@page import="java.text.SimpleDateFormat"%>
<%@page import="java.text.DateFormat"%>
<%@page import="java.util.Calendar"%>
<%@page import="folder.dnm"%>
<%@page import="folder.veritabankatman"%>
<%@page import="java.util.Date"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
        
    </head>
    
    <body>
      
       
       <%
           Lokasyon a=new Lokasyon();
           
String saatbas=request.getParameter("saat1");
String saatson=request.getParameter("saat2");
String araba=request.getParameter("aracno");
String araba2=request.getParameter("aracno2");

 String lokasyon2[][];
 String lokasyon3[][];
Date date = Calendar.getInstance().getTime();  
    DateFormat dateFormat = new SimpleDateFormat("hh:mm");  
    String strDate = dateFormat.format(date);

    if(saatbas=="" && saatson==""){
   lokasyon2=a.sendLocation(araba, strDate);
   lokasyon3=a.sendLocation(araba2, strDate);
    a.getLocation(araba,strDate,true);
    a.getLocation(araba2,strDate,false);
    }
    else{
    lokasyon2=a.sendLocation(araba, saatbas, saatson);
    lokasyon3=a.sendLocation(araba2, saatbas, saatson);
     a.getLocation(araba,saatbas,saatson,true);
    a.getLocation(araba2,saatbas,saatson,false);
    }
    for(int i=0;i<lokasyon2.length;i++){
     for(int j=0;j<2;j++){
         if(lokasyon2[i][j]==null){
         break;
         }
    out.println("koordinat="+lokasyon2[i][j]);
    out.println("koordinat2="+lokasyon3[i][j]);
    }
    }
     String redirectURL = "http://localhost:25693/WebApplication4/index.html";
    response.sendRedirect(redirectURL);
    
%>

        
    </body>
</html>

giris.html

<!DOCTYPE html>

<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<html>
    
    <head>
        <title></title>
        
      <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
    </head>
    
    <body>
         <link rel="stylesheet" type="text/css" href="./newcss.css" />
    
        <div></div>
        
        <div class="container"></div>
        
        
          <form action="yonetim.jsp">
        <h1> <label for="isim"><b>Kullanıcı Adı</b></label></h1>
        <h1>  <input type="text" name="isim" value="" /></h1>
         <h1>  <br></h1>
         <h1> <label for="sifre"><b>Şifre</b></label></h1>
         <h1> <input type="password" name="sifre" value="" /></h1>
         <h1> <br></h1>
         <h1> <input type="submit" value="GİRİŞ YAP" /></h1>
         <h1>  <br></h1>
         
          </form>
       
    </body>
</html>

cikis.jsp

<%-- 
    Document   : cikis
    Created on : Mar 15, 2022, 3:30:28 PM
    Author     : Lenovo
--%>

<%@page import="folder.veritabankatman"%>
<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <jsp:useBean id="firstbean" scope="session" class="folder.yonetici" />
        <%  
        
          veritabankatman a=new veritabankatman();
               a.time2sql(firstbean.getIsim());
                String redirectURL = "http://localhost:25693/WebApplication4/giris.html";
    response.sendRedirect(redirectURL);
        %>
    </body>
</html>


arayuz.jsp

<%-- 
    Document   : arayuz
    Created on : Mar 11, 2022, 5:03:24 PM
    Author     : Lenovo
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <link href="./newcss.css" rel="stylesheet" type="text/css">
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1></h1>
        <h4>  <form action="harita.jsp">
        
                <br> arac seciniz <br>      
        <select name="aracno" size="1">
            <option value="1">arac1</option>
            <option value="2">arac2</option>
            <option value="3">arac3</option>
            <option value="5">arac4</option>
           </select> <br> arac seciniz <br>      
        <select name="aracno2" size="1">
            <option value="1">arac1</option>
            <option value="2">arac2</option>
            <option value="3">arac3</option>
            <option value="5">arac4</option>
           </select>
          <br>
          <br>
         <br>baslangıc saati:
        <input type="text" name="saat1" value="" />
       bitis saati:     
        <input type="text" name="saat2" value="" />
       
        <input type="submit" value="haritada göster" />
      
        
            </form>
             </h4>
        <h3>
            <form action="cikis.jsp">
         
             <input type="submit" value="Oturumu Sonlandır" />
            </form>
            <%-- <form action="koordinatlar.jsp">
             <br> arac seciniz <br>      
        <select name="aracno" size="1">
            <option value="1">arac1</option>
            <option value="2">arac2</option>
            <option value="3">arac3</option>
            <option value="5">arac4</option>
           </select> <br> arac seciniz <br>      
        <select name="aracno2" size="1">
            <option value="1">arac1</option>
            <option value="2">arac2</option>
            <option value="3">arac3</option>
            <option value="5">arac4</option>
           </select>
          <br>
          <br>
         <br>baslangıc saati:
        <input type="text" name="saat1" value="" />
       bitis saati:     
        <input type="text" name="saat2" value="" />
    
             <input type="submit" value="koordinatları göster" />
</form>--%>
            
        </h3>
    </body>
</html>

3kez2.jsp

<%-- 
    Document   : 3kez2
    Created on : Mar 19, 2022, 10:57:04 PM
    Author     : Lenovo
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>Hello World!</h1>
         <%  String redirectURL = "http://localhost:25693/WebApplication4/giris.html";
   response.sendRedirect(redirectURL);%>
    </body>
</html>

3kez.jsp

<%-- 
    Document   : 3kez
    Created on : Mar 19, 2022, 10:55:45 PM
    Author     : Lenovo
--%>

<%@page contentType="text/html" pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
    <head>
         <link href="./newcss.css" rel="stylesheet" type="text/css">
        <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
        <title>JSP Page</title>
    </head>
    <body>
        <h1>    Kullanıcı 3 defa hatalı şifre girdi.<br>
            Lüften farklı bir hesapla girmeyi deneyiniz.</h1>
        <br>
        <h3>            <form action="3kez2.jsp"> <input type="submit" value="GİRİŞ SAYFASINA DÖN" />
            </form></h3>
    </body>
</html>


yonetici.java

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folder;

/**
 *
 * @author Lenovo
 */
public class yonetici {
      String isim;
       String sifre;
    int sayac;
      double veri5[][];

    public double[][] getVeri5() {
        dnm dbk = new dnm();
veri5=dbk.veri2();
        return veri5;
    }

    public void setVeri5(double[][] veri5) {
        this.veri5 = veri5;
    }

    public String getIsim() {
        return isim;
    }
public void veri(double [][]veri5){
dnm dbk = new dnm();
veri5=dbk.veri2();
}
    public void setIsim(String isim) {
        this.isim = isim;
    }

    public String getSifre() {
        return sifre;
    }

    public void setSifre(String sifre) {
        this.sifre = sifre;
    }

    public int getSayac() {
        return sayac;
    }

    public void setSayac(int sayac) {
        this.sayac = sayac;
    }
   

public boolean sifrekontrol(){ 
    veritabankatman dbk = new veritabankatman();
    return dbk.kullanicikontrol(isim, sifre);

}public boolean sayackontrol(){ 
    veritabankatman dbk = new veritabankatman();
    return dbk.sayackontrol(isim);

}
}

veritabankatman.java

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folder;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 *
 * @author Lenovo
 */
public class veritabankatman {
    private static Connection conn;
  static  String  dburl="jdbc:derby://localhost:1527/test;characterEncoding=utf8";
   static String user="test";
   static String pass ="123";
    public static Connection baglan(){
        try{
    Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            System.out.println("baglanti basarili");  
            conn= DriverManager.getConnection(dburl, user, pass);
               }
        catch(Exception e){
            System.out.println("sorun var");
        }
        return conn;
    }
  public void kullaniciliste(){
  if(conn==null){
      System.out.println("veritabani bagli degil");
      baglan();
  }
  try{
  Statement stmt = conn.createStatement();
  ResultSet rs = stmt.executeQuery("select * from kullanici");
  
 // ResultSetMetaData rsmd= rs.getMetaData();
      System.out.println("isim\tsifre\tsayac\t");
while(rs.next()){
    System.out.println(""+rs.getString(1)+" \t"+rs.getString(2)+" \t"+rs.getString(3)+" \t");

}
  }
  catch(Exception e){
  e.printStackTrace();
  } }  
  
public void time1sql(String isim){
SimpleDateFormat tarih = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

Date date = new Date();

String tarih2 = tarih.format(date);
if(conn==null){
      System.out.println("veritabani bagli degil");
      baglan();
  }
  try{
  Statement stmt = conn.createStatement();
  stmt.executeUpdate("update kullanici set timestart='"+tarih2+"'where isim='"+isim+"'");
  }
   catch(Exception e){
  e.printStackTrace();
  } 


} 
public void time2sql(String isim){
SimpleDateFormat tarih = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

Date date = new Date();

String tarih2 = tarih.format(date);
if(conn==null){
      System.out.println("veritabani bagli degil");
      baglan();
  }
  try{
  Statement stmt = conn.createStatement();
  stmt.executeUpdate("update kullanici set timeend='"+tarih2+"'where isim='"+isim+"'");
  }
   catch(Exception e){
  e.printStackTrace();
  } 


} 
public static boolean sayackontrol(String isim){
      
   if(conn==null){
      System.out.println("veritabani bagli degil");
      baglan();
  }
  try{
       Statement stmt = conn.createStatement();
        stmt.executeUpdate("update kullanici set sayac = sayac +1 where isim='"+isim+"'");
  ResultSet rs = stmt.executeQuery("select sayac from kullanici where isim ='"+isim+"'");
  rs.next();
  
  if(rs.getInt(1)<4)
  return true;
  
  }
  catch(Exception e){
  e.printStackTrace();
  } 
  return false;
  }
 
  public static boolean kullanicikontrol(String isim,String sifre){
      
   if(conn==null){
      System.out.println("veritabani bagli degil");
      baglan();
  }
  try{
       Statement stmt = conn.createStatement();
  ResultSet rs = stmt.executeQuery("select sifre from kullanici where isim ='"+isim+"'");
  rs.next();
  return sifre.equals(rs.getString(1));
  }
  catch(Exception e){
  e.printStackTrace();
  } 
  return false;
  }
 
 
  
  public static void main(String args[]) throws SQLException{
  veritabankatman dbk2= new veritabankatman();
dnm a=new dnm();
        double[][] veri3=a.veri2();
  
for (int i = 0; i < 5; i++)
            for (int j = 0; j < 4; j++)
                System.out.println("arr[" + i + "][" + j + "] = "
                                   + veri3[i][j]);
 
  }
  
}


Lokasyon.java

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folder;

import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;


/**
 *
 * @author rukiy
 */
public class Lokasyon {

    private String latitude;
    private String longitude;

    public Lokasyon() {
    }

    public Lokasyon(String latitude, String longitude) {
        this.latitude = latitude;
        this.longitude = longitude;
    }

    // public String getMessage() {
    //  String a= ((TextMessage)message).getText();
    //return a;
    // }
  

    public String getLatitude() {
        return latitude;
    }

    public void setLatitude(String latitude) {
        this.latitude = latitude;
    }

    public String getLongitude() {
        return longitude;
    }

    public void setLongitude(String longitude) {
        this.longitude = longitude;
    }

    public String[][] sendLocation(String carId, String time3) throws ParseException {
        //Creating a MongoDB client
        MongoClient mongo = new MongoClient("localhost", 27017);
        //Connecting to the database
        MongoDatabase database = mongo.getDatabase("myDB");
        System.out.println("Server is ready!");

        MongoCollection<BasicDBObject> coll = database.getCollection("Adresses", BasicDBObject.class);

        BasicDBObject query = new BasicDBObject();
        //  Lokasyon lok = new Lokasyon();
        String lokasyon[][] = new String[5000][2];  // lokasyonları tutacak matrix
        int sayac = 0;

        SimpleDateFormat df = new SimpleDateFormat("HH:mm");
        Date d = df.parse(time3);
        Calendar cal = Calendar.getInstance();
        cal.setTime(d);

        SimpleDateFormat df2 = new SimpleDateFormat("HH:mm");
        Date d2 = df2.parse(time3);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(d2);
        cal2.add(Calendar.MINUTE, - 31);
        String newTime2 = df2.format(cal2.getTime());
        System.out.println(newTime2);

        while (!newTime2.equals(time3)) {

            //System.out.println("mytime=" + time);
            query.append("carId", carId);
            query.append("time", time3);

            MongoCursor<BasicDBObject> cursor = coll.find(query).iterator();
            BasicDBObject dbobj = cursor.next();
            //  System.out.println(dbobj.getString("lat"));
            //  System.out.println(dbobj.getString("long"));
            // lok.setLatitude(carId);
            lokasyon[sayac][0] = dbobj.getString("lat");
            lokasyon[sayac][1] = dbobj.getString("long");

            cal.add(Calendar.MINUTE, - 1);
            String newTime = df.format(cal.getTime());
            time3 = newTime;
            sayac++;
        }
        System.out.println("-----\n");

        for (int i = 0; i < 31; i++) {        // son yarım saat lokasyon bilgileri
            for (int j = 0; j < 2; j++) {
                System.out.println(lokasyon[i][j]);
            }
        }
        return lokasyon;

    }
    
    public String[][] sendLocation(String carId, String time4, String time5) throws ParseException {
           //Creating a MongoDB client
        MongoClient mongo = new MongoClient("localhost", 27017);
        //Connecting to the database
        MongoDatabase database = mongo.getDatabase("myDB");
        System.out.println("Server is ready!");

        MongoCollection<BasicDBObject> coll = database.getCollection("Adresses", BasicDBObject.class);

        BasicDBObject query = new BasicDBObject();
        //  Lokasyon lok = new Lokasyon();
        String lokasyon[][] = new String[500][2];  // lokasyonları tutacak matrix
        int sayac = 0;

        SimpleDateFormat df = new SimpleDateFormat("HH:mm");
        Date d = df.parse(time5);
        Calendar cal = Calendar.getInstance();
        cal.setTime(d);

       /* SimpleDateFormat df2 = new SimpleDateFormat("HH:mm");
        Date d2 = df2.parse(time5);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(d2);
        cal2.add(Calendar.MINUTE, - 31);     //   31 = time5-time4
        String newTime2 = df2.format(cal2.getTime());
        System.out.println(newTime2);
*/
        while (!time4.equals(time5)) {

            System.out.println("mytime=" + time5);
            query.append("carId", carId);
            query.append("time", time5);

            MongoCursor<BasicDBObject> cursor = coll.find(query).iterator();
            BasicDBObject dbobj = cursor.next();
              System.out.println(dbobj.getString("lat"));
              System.out.println(dbobj.getString("long"));
            // lok.setLatitude(carId);
            lokasyon[sayac][0] = dbobj.getString("lat");
            lokasyon[sayac][1] = dbobj.getString("long");

            cal.add(Calendar.MINUTE, - 1);
            String newTime = df.format(cal.getTime());
            time5 = newTime;
            sayac++;
        }
        System.out.println("-----\n");

        for (int i = 0; i < 500; i++) {        // son yarım saat lokasyon bilgileri
            for (int j = 0; j < 2; j++) {
                System.out.println(lokasyon[i][j]);
            }
        }
        return lokasyon;
    }
    
    public  void getLocation(String carId, String time3, boolean isNull) throws ParseException, FileNotFoundException, IOException {
        //Creating a MongoDB client
        MongoClient mongo = new MongoClient("localhost", 27017);
        //Connecting to the database
        MongoDatabase database = mongo.getDatabase("myDB");
        System.out.println("Server is ready!");

        MongoCollection<BasicDBObject> coll = database.getCollection("Adresses", BasicDBObject.class);

        BasicDBObject query = new BasicDBObject();
        //  Lokasyon lok = new Lokasyon();
        String lokasyon[][] = new String[500][2];  // lokasyonları tutacak matrix
        int sayac = 0;

        SimpleDateFormat df = new SimpleDateFormat("HH:mm");
        Date d = df.parse(time3);
        Calendar cal = Calendar.getInstance();
        cal.setTime(d);

        SimpleDateFormat df2 = new SimpleDateFormat("HH:mm");
        Date d2 = df2.parse(time3);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(d2);
        cal2.add(Calendar.MINUTE, - 31);
        String newTime2 = df2.format(cal2.getTime());
        System.out.println(newTime2);

        while (!newTime2.equals(time3)) {

            //System.out.println("mytime=" + time);
            query.append("carId", carId);
            query.append("time", time3);

            MongoCursor<BasicDBObject> cursor = coll.find(query).iterator();
            BasicDBObject dbobj = cursor.next();
            //  System.out.println(dbobj.getString("lat"));
            //  System.out.println(dbobj.getString("long"));
            // lok.setLatitude(carId);
            lokasyon[sayac][0] = dbobj.getString("lat");
            lokasyon[sayac][1] = dbobj.getString("long");

            cal.add(Calendar.MINUTE, - 1);
            String newTime = df.format(cal.getTime());
            time3 = newTime;
            sayac++;
        }
        System.out.println("-----\n");

        for (int i = 0; i < 31; i++) {        // son yarım saat lokasyon bilgileri
            for (int j = 0; j < 2; j++) {
                //    System.out.println(lokasyon[i][j]);
            }
        }
        FileWriter out;
        if (isNull == true) {
            out = new FileWriter("C:/Users/Lenovo/Documents/NetBeansProjects/WebApplication4/web/123.txt");
            System.out.println("File is empty ...");
            for (int i = 0; i < 31; i++) {        // son yarım saat lokasyon bilgileri

                out.write(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
                System.out.println(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
            }
        } else {
            out = new FileWriter("C:/Users/Lenovo/Documents/NetBeansProjects/WebApplication4/web/123.txt", true);
            for (int i = 0; i < 31; i++) {
                System.out.println("giriyor mu");
                out.write(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
                System.out.println(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
                System.out.println("giriyor mu");
            }

        }

        out.flush();
        out.close();

        //   return lokasyon;
    }

    public  void getLocation(String carId, String time4, String time5, boolean isNull) throws ParseException, FileNotFoundException, IOException {
        //Creating a MongoDB client
        MongoClient mongo = new MongoClient("localhost", 27017);
        //Connecting to the database
        MongoDatabase database = mongo.getDatabase("myDB");
        System.out.println("Server is ready!");

        MongoCollection<BasicDBObject> coll = database.getCollection("Adresses", BasicDBObject.class);

        BasicDBObject query = new BasicDBObject();
        //  Lokasyon lok = new Lokasyon();
        String lokasyon[][] = new String[5000][2];  // lokasyonları tutacak matrix
        int sayac = 0;

        SimpleDateFormat df = new SimpleDateFormat("HH:mm");
        Date d = df.parse(time5);
        Calendar cal = Calendar.getInstance();
        cal.setTime(d);

        /* SimpleDateFormat df2 = new SimpleDateFormat("HH:mm");
        Date d2 = df2.parse(time5);
        Calendar cal2 = Calendar.getInstance();
        cal2.setTime(d2);
        cal2.add(Calendar.MINUTE, - 31);     //   31 = time5-time4
        String newTime2 = df2.format(cal2.getTime());
        System.out.println(newTime2);
         */
        while (!time4.equals(time5)) {

            System.out.println("mytime=" + time5);
            query.append("carId", carId);
            query.append("time", time5);

            MongoCursor<BasicDBObject> cursor = coll.find(query).iterator();
            BasicDBObject dbobj = cursor.next();
            System.out.println(dbobj.getString("lat"));
            System.out.println(dbobj.getString("long"));
            // lok.setLatitude(carId);
            lokasyon[sayac][0] = dbobj.getString("lat");
            lokasyon[sayac][1] = dbobj.getString("long");

            cal.add(Calendar.MINUTE, - 1);
            String newTime = df.format(cal.getTime());
            time5 = newTime;
            sayac++;
        }
        System.out.println("-----\n");

        /*for (int i = 0; i < 5000; i++) {        // son yarım saat lokasyon bilgileri
            for (int j = 0; j < 2; j++) {
                System.out.println(lokasyon[i][j]);
            }
        }*/
        FileWriter out;
        if (isNull == true) {
            out = new FileWriter("C:/Users/Lenovo/Documents/NetBeansProjects/WebApplication4/web/123.txt");
            System.out.println("File is empty ...");
            for (int i = 0; i < 5000; i++) {        // son yarım saat lokasyon bilgileri
                if (lokasyon[i][0] == null) {
                    break;
                }
                out.write(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
                System.out.println(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
            }
        } else {
            out = new FileWriter("C:/Users/Lenovo/Documents/NetBeansProjects/WebApplication4/web/123.txt", true);
            for (int i = 0; i < 5000; i++) {
                if (lokasyon[i][0] == null) {
                    break;
                }
                System.out.println("giriyor mu");
                out.write(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
                System.out.println(carId + ", " + lokasyon[i][0] + ", " + lokasyon[i][1] + ", 1, !\n");
                System.out.println("giriyor mu");
            }

        }

        out.flush();
        out.close();

    }
}

dnm.java

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package folder;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;


/**
 *
 * @author Lenovo
 */

public class dnm {
    
  
    private static final Gson GSON = new Gson();
    
    
    public double[][] veri2(){
     double[][] veri = {
        {5, -33.890542, 151.274856, 4},
        {4, -33.923036, 151.259052, 5},
        {3, -34.028249, 151.157507, 3},
        {2, -33.80010128657071, 151.28747820854187, 2},
        {1,-33.950198, 151.259302,1}
    };
     
    return veri;
    }
    
 
    
    
    public static void main(String[] args) throws ParseException, IOException {
       Lokasyon a=new Lokasyon();
       a.getLocation("1", "21:00", true);
          a.getLocation("2","21:00",false);
        double[][] veri = {
        {5, -33.890542, 151.274856, 4},
        {4, -33.923036, 151.259052, 5},
        {3, -34.028249, 151.157507, 3},
        {2, -33.80010128657071, 151.28747820854187, 2},
        {1,-33.950198, 151.259302,1}
    };
       String[][] sentences=new String[2][2];
    sentences[0][0]="Hi";
    sentences[0][1]="Hello";
    sentences[1][0]="How r u?";
    sentences[1][1]="How r u?";

    Gson gson=new GsonBuilder().create();
    String jsonArray = gson.toJson(sentences);
 
    }
}

